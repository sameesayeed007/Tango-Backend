# Generated by Django 2.2.15 on 2020-10-25 10:09

import datetime
import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, default=-1)),
                ('activity_name', models.CharField(blank=True, default='', max_length=255)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('activity_id', models.IntegerField(blank=True, default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='Advertisement')),
                ('ad_link', models.CharField(blank=True, default='', max_length=255)),
                ('content', models.CharField(blank=True, default='', max_length=255)),
                ('click_count', models.IntegerField(default=0)),
                ('view_count', models.IntegerField(default=0)),
                ('total_click_count', models.IntegerField(default=0)),
                ('total_view_count', models.IntegerField(default=0)),
                ('priority', models.IntegerField(default=-1)),
                ('is_active', models.BooleanField(blank=True, default=True)),
            ],
        ),
        migrations.CreateModel(
            name='APIs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=264)),
                ('details', models.CharField(blank=True, default='', max_length=100000)),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
                ('set_time', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(blank=True, default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Banner_Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Banner_id', models.IntegerField(blank=True, default=-1)),
                ('image', models.ImageField(null=True, upload_to='Banner')),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('link', models.CharField(blank=True, default='', max_length=500)),
                ('content', models.CharField(blank=True, default='', max_length=264)),
            ],
        ),
        migrations.CreateModel(
            name='BillingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, default=-1)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('non_verified_user_id', models.IntegerField(blank=True, default=-1)),
                ('ip_address', models.CharField(blank=True, default='', max_length=255)),
                ('phone_number', models.CharField(blank=True, default='', max_length=100)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('address', models.TextField(blank=True, default='')),
                ('area', models.CharField(blank=True, default='', max_length=255)),
                ('location', models.CharField(blank=True, default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=120, null=True, unique=True)),
                ('category_id', models.IntegerField(default=-1)),
                ('active', models.BooleanField(default=False)),
                ('level', models.CharField(default='First', max_length=120)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('product_id', models.IntegerField(default=0)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('non_verified_user_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='CommentReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_id', models.IntegerField(blank=True, null=True)),
                ('reply', models.TextField(blank=True)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('non_verified_user_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='CompanyInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=500)),
                ('logo', models.ImageField(blank=True, default='', upload_to='Logo')),
                ('address', models.TextField(blank=True, default='', max_length=1500)),
                ('icon', models.ImageField(blank=True, default='', upload_to='Icon')),
                ('Facebook', models.CharField(blank=True, default='', max_length=264)),
                ('twitter', models.CharField(blank=True, default='', max_length=264)),
                ('linkedin', models.CharField(blank=True, default='', max_length=264)),
                ('youtube', models.CharField(blank=True, default='', max_length=264)),
                ('email', models.CharField(blank=True, default='', max_length=264)),
                ('phone', models.CharField(blank=True, default='', max_length=264)),
                ('help_center', models.CharField(blank=True, default='', max_length=264)),
                ('About', models.CharField(blank=True, default='', max_length=5000)),
                ('policy', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100000), blank=True, default=list, size=None)),
                ('terms_condition', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100000), blank=True, default=list, size=None)),
                ('slogan', models.CharField(blank=True, default='', max_length=264)),
                ('cookies', models.CharField(blank=True, default='', max_length=10000)),
            ],
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_name', models.CharField(blank=True, default='', max_length=100)),
                ('sender_email', models.EmailField(blank=True, default='', max_length=254)),
                ('subject', models.CharField(blank=True, default='', max_length=264)),
                ('message', models.CharField(blank=True, default='', max_length=10000)),
                ('is_attended', models.BooleanField(blank=True, default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Cupons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cupon_code', models.CharField(blank=True, max_length=264, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('start_from', models.DateField(blank=True, null=True)),
                ('valid_to', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_type', models.CharField(blank=True, default='Taka', max_length=100)),
                ('value', models.FloatField(blank=True, default=1.0)),
                ('dates', models.DateTimeField(auto_now_add=True)),
                ('role_id', models.IntegerField(blank=True, default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='discount_product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_type', models.CharField(blank=True, choices=[('None', 'None'), ('Amount', 'Amount'), ('Percentage', 'Percentage')], max_length=264, null=True)),
                ('amount', models.FloatField(default=0.0)),
                ('start_date', models.DateField(auto_now_add=True, null=True)),
                ('end_date', models.DateField(null=True)),
                ('max_amount', models.FloatField(default=0)),
                ('group_product_id', models.IntegerField(null=True)),
                ('product_id', models.IntegerField(default=-1)),
                ('specification_id', models.IntegerField(default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='EmailConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_backend', models.CharField(default='django.core.mail.backends.smtp.EmailBackend', max_length=64)),
                ('email_host', models.CharField(default='smtp.gmail.com', max_length=64)),
                ('email_port', models.IntegerField(default=587)),
                ('Tls_value', models.BooleanField(default=True)),
                ('email_host_user', models.EmailField(max_length=254)),
                ('email_host_password', models.CharField(max_length=264)),
                ('Ssl_value', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, max_length=264, null=True)),
                ('ans', models.CharField(blank=True, max_length=3000, null=True)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specification_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, default=list, size=None)),
                ('title', models.CharField(blank=True, default='', max_length=120)),
                ('startdate', models.DateField(auto_now_add=True)),
                ('enddate', models.DateField(blank=True, null=True)),
                ('flashsellname', models.CharField(blank=True, max_length=120, null=True)),
                ('active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Guest_user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(default='', max_length=64)),
                ('Date', models.DateField(auto_now_add=True)),
                ('non_verified_user_id', models.IntegerField(default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory_Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(blank=True, default=-1)),
                ('specification_id', models.IntegerField(blank=True, default=-1)),
                ('quantity', models.IntegerField(blank=True, default=0)),
                ('date', models.DateField(blank=True, default='')),
                ('price', models.IntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='inventory_report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(default=-1)),
                ('specification_id', models.IntegerField(default=-1)),
                ('debit', models.IntegerField(blank=True, null=True)),
                ('credit', models.IntegerField(blank=True, null=True)),
                ('warehouse_id', models.IntegerField(blank=True, default=-1)),
                ('shop_id', models.IntegerField(blank=True, default=-1)),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('selling_price', models.FloatField(blank=True, null=True)),
                ('purchase_price', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(default=-1)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_status', models.CharField(blank=True, choices=[('Paid', 'Paid'), ('Unpaid', 'Unpaid'), ('Cancelled', 'Cancelled'), ('Not Ordered', 'Not Ordered')], default='Unpaid', max_length=155)),
                ('delivery_status', models.CharField(blank=True, choices=[('To pay', 'To pay'), ('To ship', 'To ship'), ('Received', 'Received'), ('Not Ordered', 'Not Ordered'), ('Cancelled', 'Cancelled')], default='To ship', max_length=155)),
                ('admin_status', models.CharField(blank=True, choices=[('Processing', 'Processing'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Processing', max_length=155)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('user_id', models.IntegerField(blank=True, default=-1)),
                ('ip_address', models.CharField(blank=True, default='', max_length=255)),
                ('checkout_status', models.BooleanField(blank=True, default=False, null=True)),
                ('ordered_date', models.DateField(auto_now_add=True, null=True)),
                ('non_verified_user_id', models.IntegerField(blank=True, default=-1)),
                ('coupon', models.BooleanField(blank=True, default=False, null=True)),
                ('coupon_code', models.CharField(blank=True, default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(blank=True, default=-1)),
                ('product_id', models.IntegerField(blank=True, default=-1)),
                ('specification_id', models.IntegerField(blank=True, default=-1)),
                ('quantity', models.IntegerField(blank=True, default=0)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('is_removed', models.BooleanField(default=False)),
                ('total_quantity', models.IntegerField(blank=True, default=0)),
                ('unit_price', models.FloatField(blank=True, default=0.0)),
                ('total_price', models.FloatField(blank=True, default=0.0)),
                ('unit_point', models.FloatField(blank=True, default=0.0)),
                ('total_point', models.FloatField(blank=True, default=0.0)),
                ('product_name', models.CharField(blank=True, default='', max_length=255)),
                ('product_color', models.CharField(blank=True, default='', max_length=255)),
                ('product_size', models.CharField(blank=True, default='', max_length=255)),
                ('product_unit', models.CharField(blank=True, default='', max_length=255)),
                ('product_images', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100000), blank=True, default=list, size=None)),
                ('remaining', models.IntegerField(blank=True, default=0)),
                ('admin_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Cancelled', 'Cancelled')], default='Pending', max_length=155)),
            ],
        ),
        migrations.CreateModel(
            name='OrderInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(blank=True, default=-1)),
                ('billing_address_id', models.IntegerField(blank=True, default=-1)),
                ('area_id', models.IntegerField(blank=True, default=-1)),
                ('company_id', models.IntegerField(blank=True, default=-1)),
                ('company_name', models.CharField(default='', max_length=264)),
                ('company_details', models.TextField(blank=True, default='')),
                ('delivery_type_id', models.IntegerField(blank=True, default=-1)),
                ('delivery_date', models.DateField(blank=True, default='')),
                ('days', models.IntegerField(blank=True, default=0)),
                ('host_site', models.CharField(blank=True, default='', max_length=264)),
                ('location_id', models.IntegerField(blank=True, default=-1)),
                ('location_details', models.TextField(blank=True, default='')),
                ('payment_type', models.CharField(blank=True, default='', max_length=264)),
                ('total_amount', models.FloatField(blank=True, default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seller', models.IntegerField(blank=True, default=-1)),
                ('product_admin_status', models.CharField(blank=True, choices=[('Processing', 'Processing'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Processing', max_length=155)),
                ('product_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Published', 'Published'), ('Cancelled', 'Cancelled')], default='Pending', max_length=155)),
                ('category_id', models.IntegerField(blank=True, default=-1)),
                ('sub_category_id', models.IntegerField(blank=True, default=-1)),
                ('sub_sub_category_id', models.IntegerField(blank=True, default=-1)),
                ('title', models.CharField(blank=True, default='', max_length=250)),
                ('brand', models.CharField(blank=True, default='', max_length=120)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, default='')),
                ('key_features', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), blank=True, default=list, size=None)),
                ('is_deleted', models.BooleanField(default=False)),
                ('properties', models.BooleanField(default=True)),
                ('is_group', models.BooleanField(default=False)),
                ('warranty', models.CharField(blank=True, default='', max_length=200)),
                ('origin', models.CharField(blank=True, default='', max_length=200)),
                ('shipping_country', models.CharField(blank=True, default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ProductBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Brand_name', models.CharField(blank=True, default='', max_length=264)),
                ('Brand_owner', models.CharField(blank=True, default='', max_length=264)),
                ('Brand_country', models.CharField(blank=True, default='', max_length=264)),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Barcode_img', models.CharField(max_length=264, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('product_id', models.IntegerField(default=-1)),
                ('specification_id', models.IntegerField(default=-1)),
                ('Barcode', models.CharField(max_length=264, null=True)),
                ('SKU', models.CharField(max_length=264, null=True)),
                ('SKU_img', models.CharField(max_length=264, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(default=-1)),
                ('product_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('image_url', models.CharField(blank=True, default='', max_length=255)),
                ('content', models.CharField(blank=True, default='', max_length=1500)),
            ],
        ),
        migrations.CreateModel(
            name='ProductImpression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=list, size=None)),
                ('product_id', models.IntegerField(default=-1)),
                ('view_count', models.IntegerField(blank=True, default=0)),
                ('click_count', models.IntegerField(blank=True, default=0)),
                ('cart_count', models.IntegerField(blank=True, default=0)),
                ('sales_count', models.IntegerField(blank=True, default=0)),
                ('non_verified_user', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=list, size=None)),
                ('dates', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.FloatField(blank=True, default=0.0)),
                ('product_id', models.IntegerField(default=-1)),
                ('specification_id', models.IntegerField(default=-1)),
                ('start_date', models.DateField(default=datetime.date.today)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(default=-1)),
                ('specification_id', models.IntegerField(default=-1)),
                ('price', models.FloatField(default=0.0)),
                ('purchase_price', models.FloatField(blank=True, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('currency_id', models.IntegerField(default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='ProductSpecification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(default=-1)),
                ('size', models.CharField(blank=True, default='', max_length=200)),
                ('unit', models.CharField(blank=True, default='', max_length=200)),
                ('weight', models.CharField(blank=True, default='', max_length=255)),
                ('color', models.CharField(blank=True, default='', max_length=200)),
                ('quantity', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=264)),
                ('email', models.CharField(blank=True, default='', max_length=64)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('profile_picture_url', models.CharField(blank=True, default='', max_length=255)),
                ('phone_number', models.CharField(blank=True, default='', max_length=100)),
                ('gender', models.CharField(blank=True, choices=[('m', 'Male'), ('f', 'Female'), ('o', 'Other')], default='', max_length=1)),
                ('address', models.TextField(blank=True, default='')),
                ('area', models.CharField(blank=True, default='', max_length=255)),
                ('location', models.CharField(blank=True, default='', max_length=255)),
                ('user_id', models.IntegerField(blank=True, default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(default=0)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('non_verified_user_id', models.IntegerField(blank=True, null=True)),
                ('content', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_reviews')),
                ('rating', models.IntegerField(blank=True, choices=[(1, 'Worst'), (2, 'Bad'), (3, 'Not Bad'), (4, 'Good'), (5, 'Excellent')], null=True)),
                ('date_created', models.DateField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='RolesPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roleType', models.CharField(blank=True, default='', max_length=264)),
                ('roleDetails', models.CharField(blank=True, default='', max_length=264)),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax', models.FloatField(blank=True, default=0.0)),
                ('vat', models.FloatField(blank=True, default=0.0)),
                ('role_id', models.IntegerField(blank=True, default=-1)),
                ('point_value', models.FloatField(blank=True, default=1.0)),
                ('point_converted_value', models.FloatField(blank=True, default=0.0)),
                ('theme_id', models.IntegerField(blank=True, default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_name', models.CharField(blank=True, default='', max_length=264)),
                ('shop_location', models.CharField(blank=True, default='', max_length=264)),
            ],
        ),
        migrations.CreateModel(
            name='ShopInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_id', models.IntegerField(blank=True, default=-1)),
                ('specification_id', models.IntegerField(blank=True, default=-1)),
                ('quantity', models.IntegerField(blank=True, default=0)),
                ('product_id', models.IntegerField(blank=True, default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='Sub_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField(default=-1)),
                ('sub_category_id', models.IntegerField(default=-1)),
                ('title', models.CharField(blank=True, default='None', max_length=120)),
                ('active', models.BooleanField(default=False)),
                ('level', models.CharField(default='Second', max_length=120)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('children', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=120, null=True), blank=True, default=list, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Sub_Sub_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_category_id', models.IntegerField(default=-1)),
                ('title', models.CharField(blank=True, default='None', max_length=120)),
                ('active', models.BooleanField(default=False)),
                ('level', models.CharField(default='Third', max_length=120)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('sub_sub_category_id', models.IntegerField(default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=264)),
                ('details', models.CharField(blank=True, default='', max_length=100000)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=255)),
                ('sender_id', models.IntegerField(blank=True, default=-1)),
                ('receiver_id', models.IntegerField(blank=True, default=-1)),
                ('department', models.CharField(blank=True, default='', max_length=255)),
                ('complain', models.TextField(blank=True, default='')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CLOSED', 'Closed')], default='pending', max_length=155)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_attended', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='TicketReplies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.IntegerField(default=-1)),
                ('reply', models.TextField(blank=True, default='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.IntegerField(blank=True, default=-1)),
                ('name', models.CharField(max_length=255, null=True)),
                ('is_staff', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='user_balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wallet', models.FloatField(default=0)),
                ('point', models.FloatField(default=0)),
                ('dates', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.IntegerField(default=-1)),
                ('ip_id', models.IntegerField(default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='user_relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified_user_id', models.IntegerField(blank=True, default=-1)),
                ('non_verified_user_id', models.IntegerField(blank=True, default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='user_supervisor_relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supervisor_id', models.IntegerField(blank=True, default=0)),
                ('user_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Userz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField()),
                ('name', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(default=-1)),
                ('title', models.CharField(default='', max_length=120)),
                ('sale_price', models.FloatField(blank=True, default=0.0)),
                ('active', models.BooleanField(default=True)),
                ('inventory', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warehouse_name', models.CharField(blank=True, default='', max_length=264)),
                ('warehouse_location', models.CharField(blank=True, default='', max_length=264)),
            ],
        ),
        migrations.CreateModel(
            name='WarehouseInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warehouse_id', models.IntegerField(blank=True, default=-1)),
                ('specification_id', models.IntegerField(blank=True, default=-1)),
                ('product_id', models.IntegerField(blank=True, default=-1)),
                ('quantity', models.IntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_suplier', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone_number', models.CharField(blank=True, default='', max_length=64)),
                ('role', models.CharField(blank=True, default='', max_length=64)),
                ('pwd', models.CharField(default='', max_length=568)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
